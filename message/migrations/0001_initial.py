# Generated by Django 5.2.3 on 2025-06-23 21:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MessageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do tipo de mensagem (ex: Aviso, Recado, Urgente).', max_length=100, unique=True, verbose_name='Nome')),
                ('description', models.TextField(blank=True, help_text='Descrição opcional do tipo de mensagem.', null=True, verbose_name='Descrição')),
                ('color', models.CharField(default='#000000', help_text='Cor associada ao tipo de mensagem (formato HEX, ex: #FF0000).', max_length=7, verbose_name='Cor')),
            ],
            options={
                'verbose_name': 'Tipo de Mensagem',
                'verbose_name_plural': 'Tipos de Mensagens',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('inicio', models.DateTimeField()),
                ('fim', models.DateTimeField(blank=True, null=True)),
                ('classes', models.ManyToManyField(related_name='events', to='school.class')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Título da mensagem.', max_length=255, null=True, verbose_name='Título')),
                ('context', models.TextField(blank=True, help_text='Conteúdo da mensagem.', null=True, verbose_name='Conteúdo')),
                ('activities', models.TextField(blank=True, help_text='Atividades realizadas na classe (para mensagens de rotina diária).', null=True, verbose_name='Atividades na Classe')),
                ('homework', models.TextField(blank=True, help_text='Tarefa de casa (para mensagens de rotina diária).', null=True, verbose_name='Tarefa de Casa')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que a mensagem foi criada.', verbose_name='Data de Criação')),
                ('attachments', models.FileField(blank=True, help_text='Arquivo anexo à mensagem (opcional).', null=True, upload_to='attachments/', verbose_name='Anexo')),
                ('scheduled_time', models.DateTimeField(blank=True, help_text='Data e hora em que a mensagem estará disponível.', null=True, verbose_name='Data e Hora Agendada')),
                ('classes', models.ManyToManyField(blank=True, help_text='Turmas para as quais a mensagem será enviada.', related_name='messages', to='school.class', verbose_name='Turmas')),
                ('created_by', models.ForeignKey(help_text='Usuário responsável pela criação da mensagem.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='Criada por')),
                ('grades', models.ManyToManyField(blank=True, help_text='Séries para as quais a mensagem será enviada.', related_name='messages', to='school.grade', verbose_name='Séries')),
                ('users', models.ManyToManyField(blank=True, help_text='Usuários específicos que receberão a mensagem.', related_name='individual_messages', to=settings.AUTH_USER_MODEL, verbose_name='Usuários')),
                ('type', models.ForeignKey(blank=True, help_text='Tipo de mensagem (ex: Aviso, Urgente, Informação).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='message.messagetype', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
            },
        ),
        migrations.CreateModel(
            name='MessageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='message_gallery/', verbose_name='Imagem')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição da Imagem')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='message.message', verbose_name='Mensagem')),
            ],
            options={
                'verbose_name': 'Imagem da Mensagem',
                'verbose_name_plural': 'Imagens da Mensagem',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReceivedMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False, help_text='Indica se a mensagem foi lida pelo destinatário.', verbose_name='Lida')),
                ('received_at', models.DateTimeField(auto_now_add=True, help_text='Data em que a mensagem foi disponibilizada.', verbose_name='Data de Recebimento')),
                ('message', models.ForeignKey(help_text='Mensagem recebida.', on_delete=django.db.models.deletion.CASCADE, related_name='received_by', to='message.message', verbose_name='Mensagem')),
                ('recipient', models.ForeignKey(help_text='Usuário que recebeu a mensagem.', on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL, verbose_name='Destinatário')),
            ],
            options={
                'verbose_name': 'Recebida',
                'verbose_name_plural': 'Recebidas',
            },
        ),
        migrations.CreateModel(
            name='MessageReadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=True, help_text='Indica se a mensagem foi lida (sempre True).', verbose_name='Lida')),
                ('read_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora da leitura.', verbose_name='Data de Leitura')),
                ('message', models.ForeignKey(help_text='Mensagem que foi lida.', on_delete=django.db.models.deletion.CASCADE, to='message.message', verbose_name='Mensagem')),
                ('user', models.ForeignKey(help_text='Usuário que leu a mensagem.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Leitura',
                'verbose_name_plural': 'Logs de Leitura',
                'unique_together': {('user', 'message')},
            },
        ),
    ]
